server.port=8100

logging.file.path=./logs

management.endpointsweb.exposure.include = logs

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_ADDRESS:localhost:29092}
spring.kafka.consumer.group-id=generic-player
# spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
# spring.kafka.consumer.properties.[spring.deserializer.value.delegate.class]=org.apache.kafka.common.serialization.ByteArrayDeserializer
# spring.kafka.consumer.properties.[spring.deserializer.key.delegate.class]=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# spring.kafka.consumer.isolation-level=read_committed



spring.endpoints.logfile.enabled=true
spring.endpoints.actuator.enabled=true

# either "SINGLE" (if you build a player based on this), or "MULTI" (to test the core services)
dungeon.mode="SINGLE" 
# "Martina Musterfrau" - if undefined, a random name will be chosen
dungeon.singlePlayer.playerName=
# "martina@musterfrau.de" - if undefined, a random name will be chosen
dungeon.singlePlayer.playerEmail=
dungeon.multiPlayer.number=25
dungeon.services.game=${GAME_SERVICE}